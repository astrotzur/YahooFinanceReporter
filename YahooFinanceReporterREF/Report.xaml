<Activity mc:Ignorable="sap sap2010" x:Class="Report" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="report_dt" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Report_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Report" sap:VirtualizedContainerService.HintSize="1828,5122" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[in_Config(&quot;Mail Recipients&quot;).ToString().Split(&quot;;&quot;c).Select(Function(s) s.Trim()).ToList()]" Name="recipient_list" />
      <Variable x:TypeArguments="snm:MailMessage" Default="[New System.Net.Mail.MailMessage()]" Name="mail_message" />
      <Variable x:TypeArguments="x:String" Name="in_output_folder_path_str">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LogOutputPath&quot;).ToString()" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Default="[in_config(&quot;log_filename&quot;).ToString()]" Name="log_filename" />
      <Variable x:TypeArguments="x:String" Name="exchange_rates_jstr" />
      <Variable x:TypeArguments="scg:IEnumerable(sd:DataRow)" Name="earnings_today_rows" />
      <Variable x:TypeArguments="scg:IEnumerable(sd:DataRow)" Name="top_movers_rows" />
      <Variable x:TypeArguments="scg:IEnumerable(sd:DataRow)" Name="usd_rows" />
      <Variable x:TypeArguments="scg:IEnumerable(sd:DataRow)" Name="non_usd_rows" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;ReportOutputPath&quot;).ToString() + &quot;\&quot; + in_Config(&quot;report_filename&quot;).ToString()]" Name="report_path_str" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="512.6666666666666,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Logger.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_level" />
        <InArgument x:TypeArguments="x:String" x:Key="in_message">--- Report.xaml started ---</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Http client" EnableSSLVerification="True" EndPoint="[in_Config(&quot;CurrencyExchangeEndpoint&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="512.6666666666666,104" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[exchange_rates_jstr]" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="512.6666666666666,1080.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="484,336" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:List(x:String)" Name="failed_symbols" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Sorting the stocks with exchange rate adjustment" Code="Try&#xA;&#x9;Dim root = Newtonsoft.Json.Linq.JObject.Parse(ex_rates)&#xA;&#x9;Dim rates = CType(root(&quot;rates&quot;), Newtonsoft.Json.Linq.JObject)&#xA;&#x9;Dim fxDict = rates.Properties().ToDictionary(Function(p) p.Name, Function(p) CDbl(p.Value))&#xA;&#xA;&#x9;' Track failed symbols&#xA;&#x9;failed_symbols = New List(Of String)&#xA;&#xA;&#x9;' Prepare sortable rows&#xA;&#x9;Dim sortableRows As New List(Of DataRow)&#xA;&#xA;&#x9;For Each row In report_dt.AsEnumerable()&#xA;&#x9;&#x9;Dim currency = row(&quot;Currency&quot;).ToString()&#xA;&#x9;&#x9;Dim symbol = row(&quot;Symbol&quot;).ToString()&#xA;&#xA;&#x9;&#x9;If row(&quot;Currency&quot;).ToString() = &quot;USD&quot; Then&#xA;&#x9;&#x9;&#x9;sortableRows.Add(row)&#xA;&#x9;&#x9;ElseIf fxDict.ContainsKey(currency) Then&#xA;&#x9;&#x9;&#x9;row(&quot;Numeric Market Cap&quot;) = CDbl(row(&quot;Numeric Market Cap&quot;)) / fxDict(currency)&#xA;&#x9;&#x9;&#x9;sortableRows.Add(row)&#xA;&#x9;&#x9;Else&#xA;&#x9;&#x9;&#x9;failed_symbols.Add(symbol)&#xA;&#x9;&#x9;End If&#xA;&#x9;Next&#xA;&#xA;&#x9;' Sort valid rows&#xA;&#x9;Dim sortedRows = sortableRows.OrderByDescending(Function(row) CDbl(row(&quot;Numeric Market Cap&quot;))).ToArray()&#xA;&#xA;&#x9;' Clone and rebuild DataTable&#xA;&#x9;Dim sorted_dt = report_dt.Clone()&#xA;&#x9;For Each row In sortedRows&#xA;&#x9;&#x9;sorted_dt.ImportRow(row)&#xA;&#x9;Next&#xA;&#xA;&#x9;sorted_dt.Columns.Remove(&quot;Numeric Market Cap&quot;)&#xA;&#x9;report_dt = sorted_dt&#xA;&#xA;Catch ex As Exception&#xA;&#x9;System.Console.WriteLine(&quot;Invoke Code Error: &quot; &amp; ex.Message)&#xA;End Try" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="450,228" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="report_dt">[report_dt]</InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ex_rates">[exchange_rates_jstr]</InArgument>
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="failed_symbols">[failed_symbols]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each failed_symbol" sap:VirtualizedContainerService.HintSize="450,48" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[failed_symbols]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="failed_symbol" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,228" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="382,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Logger.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_level">Error</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_message">[$"Business Exception - Market Cap USD adjustment failed for symbol {failed_symbol}"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="484,545.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap:VirtualizedContainerService.HintSize="450,485.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="416,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Logger.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_level">Error</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_message">Failed sorting the stocks table by market cap</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="416,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Logger.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_level">Error</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_message">[exception.Message()]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Rethrow sap:VirtualizedContainerService.HintSize="416,48" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
              </Sequence>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="484,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <Sequence DisplayName="creating sheets" sap:VirtualizedContainerService.HintSize="512.6666666666666,2453.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="478.6666666666667,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Logger.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_level" />
          <InArgument x:TypeArguments="x:String" x:Key="in_message">Calculating tables for different sheets</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.6666666666667,241.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)">[top_movers_rows]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)">[report_dt.AsEnumerable().Where(Function(row) Math.Abs(Double.Parse(row("Change %").ToString.Replace("%", "").Trim())) &gt; 2)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)">[usd_rows]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)">[report_dt.AsEnumerable().Where(Function(row) row("Currency").ToString() = "USD")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)">[non_usd_rows]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)">[report_dt.AsEnumerable().Where(Function(row) row("Currency").ToString() &lt;&gt; "USD")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)">[earnings_today_rows]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:IEnumerable(sd:DataRow)" xml:space="preserve">[report_dt.AsEnumerable().Where(Function(row) If(row("Earnings Date").ToString().Contains(" - "),
   DateTime.TryParseExact(Split(row("Earnings Date").ToString(), " - ")(0).Trim(), "MMM d, yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, Nothing) AndAlso
   DateTime.TryParseExact(Split(row("Earnings Date").ToString(), " - ")(1).Trim(), "MMM d, yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, Nothing) AndAlso
   DateTime.Today &gt;= DateTime.ParseExact(Split(row("Earnings Date").ToString(), " - ")(0).Trim(), "MMM d, yyyy", Globalization.CultureInfo.InvariantCulture) AndAlso
   DateTime.Today &lt;= DateTime.ParseExact(Split(row("Earnings Date").ToString(), " - ")(1).Trim(), "MMM d, yyyy", Globalization.CultureInfo.InvariantCulture),   
   DateTime.TryParseExact(row("Earnings Date").ToString().Trim(), "MMM d, yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, Nothing) AndAlso
   DateTime.Today = DateTime.ParseExact(row("Earnings Date").ToString().Trim(), "MMM d, yyyy", Globalization.CultureInfo.InvariantCulture)
))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="478.6666666666667,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Logger.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_level" />
          <InArgument x:TypeArguments="x:String" x:Key="in_message">[$"Creating report file at '{report_path_str}'"]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[report_dt]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="478.6666666666667,148" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="All Data" WorkbookPath="[report_path_str]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="478.6666666666667,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Logger.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_level" />
          <InArgument x:TypeArguments="x:String" x:Key="in_message">Creating 'Top Movers' sheet</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[If(top_movers_rows.Any(), top_movers_rows.CopyToDataTable(), report_dt.Clone())]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="478.6666666666667,148" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Top Movers" WorkbookPath="[report_path_str]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="478.6666666666667,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Logger.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_level" />
          <InArgument x:TypeArguments="x:String" x:Key="in_message">Creating 'USD' sheet</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[If(usd_rows.Any(), usd_rows.CopyToDataTable(), report_dt.Clone())]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="478.6666666666667,148" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="USD" WorkbookPath="[report_path_str]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="478.6666666666667,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Logger.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_level" />
          <InArgument x:TypeArguments="x:String" x:Key="in_message">Creating 'non-USD' sheet</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[If(non_usd_rows.Any(), non_usd_rows.CopyToDataTable(), report_dt.Clone())]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="478.6666666666667,148" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="non-USD" WorkbookPath="[report_path_str]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="478.6666666666667,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Logger.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_level" />
          <InArgument x:TypeArguments="x:String" x:Key="in_message">Creating 'Highest Market Cap' sheet</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[If(report_dt.Rows.Count &gt; 0,&#xA;   report_dt.AsEnumerable().Take(CInt(in_Config(&quot;Top N Market Caps&quot;).ToString())).CopyToDataTable(),&#xA;   report_dt.Clone())]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="478.6666666666667,148" sap2010:WorkflowViewState.IdRef="WriteRange_5" SheetName="Highest Market Cap" WorkbookPath="[report_path_str]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="478.6666666666667,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Logger.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_level" />
          <InArgument x:TypeArguments="x:String" x:Key="in_message">Creating 'Earnings Today!' sheet</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[If(earnings_today_rows.Any(), earnings_today_rows.CopyToDataTable(), report_dt.Clone())]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="478.6666666666667,138.66666666666666" sap2010:WorkflowViewState.IdRef="WriteRange_6" SheetName="Earnings Today!" WorkbookPath="[report_path_str]" />
    </Sequence>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each recipient_str" sap:VirtualizedContainerService.HintSize="512.6666666666666,350" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[recipient_list]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="recipient_str" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,218" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="mail_message.To assignment" sap:VirtualizedContainerService.HintSize="382,158" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="snm:MailAddressCollection">[mail_message.To]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:String">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="recipient_str" />
              </InArgument>
            </InvokeMethod>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <InvokeMethod DisplayName="mail_message.Attachments assignment" sap:VirtualizedContainerService.HintSize="512.6666666666666,170.66666666666666" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="snm:AttachmentCollection">[mail_message.Attachments]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="snm:Attachment">[New System.Net.Mail.Attachment(report_path_str)]</InArgument>
    </InvokeMethod>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="512.6666666666666,241.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="snm:MailAddress">[mail_message.From]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="snm:MailAddress">[New System.Net.Mail.MailAddress(in_Config("Mail From").ToString())]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Boolean">[mail_message.IsBodyHtml]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[mail_message.Body]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[$"&lt;html&gt;&lt;body&gt;&lt;h2&gt;Greetings!&lt;/h2&gt;&lt;p&gt;This is a &lt;b&gt;{in_config("logF_BusinessProcessName").ToString()}&lt;/b&gt; report email for &lt;i&gt;{Now.ToString("MMMM d, yyyy", System.Globalization.CultureInfo.InvariantCulture)}&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The Market Cap leader today is {System.Net.WebUtility.HtmlEncode(report_dt.Rows(0)("Name").ToString())} with a cap value of {report_dt.Rows(0)("Market Cap")} {report_dt.Rows(0)("Currency")}.&lt;/p&gt;&lt;p&gt;The 'Earnings Today!' sheet {If(earnings_today_rows.Count &gt; 0, "contains some data", "is empty")} today.&lt;/p&gt;&lt;p&gt;More details are available in the &lt;b&gt;{in_Config("report_filename").ToString()}&lt;/b&gt; attachment.&lt;/p&gt;&lt;p&gt;Kind regards,&lt;br&gt;UiPath Robot&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[mail_message.Subject]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[$"{in_config("logF_BusinessProcessName").ToString()} - {Now.ToString("MMMM d, yyyy", System.Globalization.CultureInfo.InvariantCulture)}"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:SaveMail Email="{x:Null}" DisplayName="Save Email Message" FilePath="[System.IO.Path.ChangeExtension(report_path_str, &quot;.eml&quot;)]" sap:VirtualizedContainerService.HintSize="512.6666666666666,176.66666666666666" sap2010:WorkflowViewState.IdRef="SaveMail_1" MailMessage="[mail_message]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="512.6666666666666,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Logger.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_level" />
        <InArgument x:TypeArguments="x:String" x:Key="in_message">The email message object was created. No 'Send' activities are present because no infrastructure was defined</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Logger - Invoke Workflow File (Logger.xaml)" sap:VirtualizedContainerService.HintSize="512.6666666666666,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Logger.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_level" />
        <InArgument x:TypeArguments="x:String" x:Key="in_message">--- Report.xaml ended ---</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_log_filename">[log_filename]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_output_folder_path_str">[in_output_folder_path_str]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>